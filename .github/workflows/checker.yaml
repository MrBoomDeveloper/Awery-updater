name: update-checker

on:
  workflow_dispatch:

env:
  status: failure
  workflow_name: none
  apk-path: none
  repo-title: none

jobs:
  check_for_update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Main.go
        id: run-main
        run: |
          go run ./src/main.go --token="${{ secrets.GITHUB_TOKEN }}"

      - name: Set Environment Variables
        run: |
          echo "status=$(jq -r '.status' data/info.json)" >> $GITHUB_ENV
          echo "workflow_name=$(jq -r '.workflow.title' data/info.json)" >> $GITHUB_ENV
          echo "repo-title=$(jq -r '.workflow.repo' data/settings.json)" >> $GITHUB_ENV
          echo "apk-path=$(ls -S archive/*.apk | head -n 1)" >> $GITHUB_ENV

      - name: Make Temporary Files
        run: |
          echo "$(jq -r '.["commit-log"]' data/info.json)" > ./data/commit-log.txt
          # echo "$(jq -r '.["elapsed-time"]' data/info.json)" > ./data/elapsed-time.txt

      - name: Get Apk Info
        id: apk-info
        if: ${{ env.status == 'success' }}
        uses: hkusu/apk-info-action@v1
        with:
          apk-path: ${{ env.apk-path }}

      - name: Commit Changes
        run: |
          git config --global user.email "${{ secrets.EMAIL }}"
          git config --global user.name "${{ github.repository_owner }}"
          git add .
          git commit -m "Update ${{ env.repo-title }} to latest version"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Telegram
        if: ${{ success() && github.event_name == 'workflow_dispatch' }}
        run: |
          APK_FILE1="./archive/app-beta-modern-release-signed.apk"
          APK_FILE2="./archive/app-beta-legacy-release-signed.apk"
          APK_FILE3="./archive/app-prod-legacy-release-signed.apk"
          APK_FILE4="./archive/app-prod-modern-release-signed.apk"
          COMMIT_MESSAGE=$(cat ./data/commit-log.txt)
          MESSAGE="Beta release: $COMMIT_MESSAGE"

          curl -v -F "chat_id=-1001990691533" \
               -F "document="./archive/app-beta-modern-release-signed.apk" \
               https://api.telegram.org/bot6466986906:AAFNxh2KOe-E1z4Khwlc0AMngWz0UwVmOT8/sendDocument
               curl -v -F "chat_id=-1001990691533" \
               -F "document="./archive/app-beta-legacy-release-signed.apk" \
               https://api.telegram.org/bot6466986906:AAFNxh2KOe-E1z4Khwlc0AMngWz0UwVmOT8/sendDocument
               curl -v -F "chat_id=-1001990691533" \
               -F "document="./archive/app-prod-legacy-release-signed.apk \
               https://api.telegram.org/bot6466986906:AAFNxh2KOe-E1z4Khwlc0AMngWz0UwVmOT8/sendDocument
               curl -v -F "chat_id=-1001990691533" \
               -F "document="./archive/app-prod-modern-release-signed.apk \
               -F "caption=${MESSAGE}" \
               https://api.telegram.org/bot6466986906:AAFNxh2KOe-E1z4Khwlc0AMngWz0UwVmOT8/sendDocument

  rerun-workflow:
    name: Re-run workflow
    needs: check_for_update
    if: success() || failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Wait for 5 minutes
        run: |
          elapsed_time=$(jq -r '.["elapsed-time"]' data/info.json)

          if [ $elapsed_time -lt 300 ]; then
            sleep $((300 - elapsed_time))
          fi

      - name: Re-trigger workflow
        run: gh workflow run checker.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
